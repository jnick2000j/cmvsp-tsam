rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isApproved() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isApproved == true;
    }

    match /users/{userId} {
      // DENY direct creation of user documents from the client.
      // The createUserAccount Cloud Function is now responsible for this.
      allow create: if false;

      allow read, update: if request.auth.uid == userId || isAdmin();
      
      allow delete: if isAdmin();
    }

    match /artifacts/{appId}/public/data/{document=**} {
      allow read, write: if request.auth != null && isApproved();
    }
    
    // Your other rules remain unchanged.
    match /artifacts/{appId}/public/data/branding/settings {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /artifacts/{appId}/public/data/roleRequests/{docId} {
      allow create: if true;
      allow read, delete: if isAdmin();
    }
  }
}