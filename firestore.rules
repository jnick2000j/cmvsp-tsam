rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions from your original file ---
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isApproved() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isApproved == true;
    }

    // --- Rules from your original file ---
    match /users/{userId} {
      // DENY direct creation of user documents from the client.
      // The createUserAccount Cloud Function is responsible for this.
      allow create: if false;
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }

    // Add these new rules at the same level as the 'classes' or 'stations' rules
    match /artifacts/{appId}/public/data/icons/{iconId} {
      allow read: if request.auth != null;
    // Only admins can create, update, or delete icons
    allow create, update, delete: if isAdmin();
    }

    match /artifacts/{appId}/public/data/branding/settings {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /artifacts/{appId}/public/data/roleRequests/{docId} {
      allow create: if true;
      allow read, delete: if isAdmin();
    }

    // --- New Rules for Class Management ---
    match /classes/{classId} {
      // Any approved user can read class details
      allow read: if request.auth != null && isApproved();
      // Only admins can create, update, or delete classes
      allow create, update, delete: if isAdmin();

      // Rules for the enrollments subcollection
      match /enrollments/{userId} {
        // Allow creation only via the Cloud Function (any authenticated user can trigger it)
        allow create: if request.auth != null;
        // Allow admins or the lead instructor to manage enrollments
        allow read, update, delete: if request.auth != null && (
          isAdmin() ||
          get(/databases/$(database)/documents/classes/$(classId)).data.leadInstructor == request.auth.uid
        );
      }
    }

    // --- Default catch-all rule from your original file ---
    // This must come AFTER specific rules to avoid overriding them.
    match /artifacts/{appId}/public/data/{document=**} {
      allow read, write: if request.auth != null && isApproved();
    }
  }
}