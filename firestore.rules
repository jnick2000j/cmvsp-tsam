rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAdmin() {
      // Checks if the requesting user has an 'isAdmin' flag set to true in their user document.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isApproved() {
      // Checks if the requesting user has an 'isApproved' flag set to true.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isApproved == true;
    }

    // --- User Management Rules ---
    match /users/{userId} {
      // User documents can't be created directly by the client; a Cloud Function is responsible for this.
      allow create: if false;
      // Users can read/update their own profile. Admins can read/update any profile.
      allow read, update: if request.auth.uid == userId || isAdmin();
      // Only admins can delete user profiles.
      allow delete: if isAdmin();
    }

    // --- Signed Waiver Rules (Subcollection of Users) ---
    match /users/{userId}/signedWaivers/{signedWaiverId} {
        // A user can only create signed waivers for themselves.
        allow create: if request.auth.uid == userId;
        // A user can read their own signed waivers. Admins can also read them.
        allow read: if request.auth.uid == userId || isAdmin();
        // Signed waivers are immutable and cannot be updated or deleted.
        allow update, delete: if false;
    }

    // --- App-specific Public Data Rules ---
    match /artifacts/{appId}/public/data/branding/settings {
      // Anyone can read branding settings.
      allow read: if true;
      // Only admins can change branding settings.
      allow write: if isAdmin();
    }
    match /artifacts/{appId}/public/data/roleRequests/{docId} {
      // Anyone can submit a role request.
      allow create: if true;
      // Only admins can read or delete role requests.
      allow read, delete: if isAdmin();
    }

    // --- Class Management Rules ---
    match /classes/{classId} {
      // Any approved user can read class details.
      allow read: if request.auth != null && isApproved();
      // Only admins can create, update, or delete classes.
      allow create, update, delete: if isAdmin();
    }

    // --- Waiver Template Rules ---
    match /waivers/{waiverId} {
        // Any approved user can read waiver templates.
        allow read: if request.auth != null && isApproved();
        // Only admins can create, update, or delete waiver templates.
        allow write: if isAdmin();
    }

    // --- Enrollment Rules ---
    match /enrollments/{enrollmentId} {
      // Any authenticated user can create an enrollment request.
      allow create: if request.auth.uid != null;
      // A user can read their own enrollment documents. Admins can read any enrollment.
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      // Only admins can update or delete enrollment documents.
      allow update, delete: if isAdmin();
    }
    
    // --- Shift Management Rules ---
    match /shifts/{shiftId} {
      // Any approved user can read shift details.
      allow read: if request.auth != null && isApproved();
      // Only admins can create, update, or delete shifts.
      allow write: if isAdmin();
    }

    // --- Time Clock Rules ---
    match /timeClock/{entryId} {
        // A user can only create time clock entries for themselves.
        allow create: if request.auth.uid == request.resource.data.userId;
        // A user can read their own entries. Admins can read any entry.
        allow read: if request.auth.uid == resource.data.userId || isAdmin();
        // Only admins can update or delete time clock entries.
        allow update, delete: if isAdmin();
    }
  }
}
